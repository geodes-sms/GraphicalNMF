import "utils.stg"
import "model_adapter.stg"
import "node_adapter.stg"

adapter_factory(name, classes, imports, package) ::= <<
<if(package)>package <package>;<\n><\n><endif><\\>
<\\>
<if(imports)>
<imports:{imp | import <imp>;}; separator="\n">
<endif>
import org.eclipse.emf.ecore.EPackage;
import geodes.sms.neo4j.io.entity.INodeEntity;
import adapters.*;

public class <adapter_factory_class(name)> extends AbstractAdapterFactory
{
    public <adapter_factory_class(name)>(EPackage ePackage)
    {
        super(ePackage);
    }


    @Override
    protected AbstractModelAdapter connectDelegate(String uri, String user, String password)
    {
        ModelManagerImpl modelManager = new ModelManagerImpl(uri, user, password);
        return new <model_adapter_class(name)>(modelManager);
    }

    @Override
    protected AbstractNodeAdapter createAdatperDelegate(INodeEntity node) throws NoSuchClassException
    {
        <if(classes)>
        AbstractNodeAdapter adapter;

        switch(node.getLabel())
        {
            <classes:{class | <switch_case(class,
                            {adapter = new <node_adapter_class(class)>((<class>) node);} 
                          )>}; separator="\n">
            default:
                throw new NoSuchClassException(node.getLabel());
        }

        return adapter;
        <else>
        throw new NoSuchClassException(node.getLabel());
        <endif>
    }
}
>>

adapter_factory_class(name) ::= "<name>AdapterFactory"